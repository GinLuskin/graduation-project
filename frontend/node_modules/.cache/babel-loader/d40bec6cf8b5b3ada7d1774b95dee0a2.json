{"ast":null,"code":"var _jsxFileName = \"/Users/reginaluskin/Desktop/Graduation-Project/src/user/pages/Auth.js\";\nimport React, { useState, useContext } from \"react\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_EMAIL, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport \"./Auth.css\";\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    }\n  });\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({\n        ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({\n        ...formState.inputs,\n        name: {\n          value: \"\",\n          isValid: false\n        }\n      }, false);\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n    if (isLoginMode) {} else {\n      try {\n        const response = await fetch('http://localhost:4000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n        const responseData = await response.json();\n        console.log(responseData);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    auth.login();\n  };\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"Login Required\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, !isLoginMode && /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Your Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \" Please enter a name.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    element: \"input\",\n    type: \"email\",\n    label: \"E-Mail\",\n    validators: [VALIDATOR_EMAIL],\n    errorText: \"Please enter a valid email address.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    element: \"input\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid password, at least 5 characters.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, isLoginMode ? \"LOGIN\" : \"SIGNUP\")), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    onClick: switchModeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, \"SWITCH TO \", isLoginMode ? \"SIGNUP\" : \"LOGIN\"));\n};\nexport default Auth;","map":{"version":3,"names":["React","useState","useContext","useForm","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","VALIDATOR_REQUIRE","Button","AuthContext","Card","Input","Auth","auth","isLoginMode","setIsLoginMode","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","prevMode","authSubmitHandler","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","responseData","json","console","log","err","login"],"sources":["/Users/reginaluskin/Desktop/Graduation-Project/src/user/pages/Auth.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\n\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_EMAIL,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { AuthContext  } from \"../../shared/context/auth-context\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\n\nimport \"./Auth.css\";\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: \"\",\n      isValid: false,\n    },\n    password: {\n      value: \"\",\n      isValid: false,\n    },\n  });\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n    } else {\n      try {\n        const response = await fetch('http://localhost:4000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n\n        const responseData = await response.json();\n        console.log(responseData);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    auth.login();\n  };\n\n\n  return (\n    <Card className=\"authentication\">\n      <h2>Login Required</h2>\n      <hr />\n      <form onSubmit={authSubmitHandler}>\n        {!isLoginMode && (\n          <Input\n            element=\"input\"\n            id=\"name\"\n            type=\"text\"\n            label=\"Your Name\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\" Please enter a name.\"\n            onInput={inputHandler}\n          />\n        )}\n        <Input\n          id=\"email\"\n          element=\"input\"\n          type=\"email\"\n          label=\"E-Mail\"\n          validators={[VALIDATOR_EMAIL]}\n          errorText=\"Please enter a valid email address.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"password\"\n          element=\"input\"\n          type=\"password\"\n          label=\"Password\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid password, at least 5 characters.\"\n          onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\n        </Button>\n      </form>\n      <Button inverse onClick={switchModeHandler}>\n        SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\n      </Button>\n    </Card>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}