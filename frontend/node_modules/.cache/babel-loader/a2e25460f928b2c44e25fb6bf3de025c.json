{"ast":null,"code":"import React from'react';import{BrowserRouter as Router,Route,Redirect,Switch}from'react-router-dom';import Users from'./user/pages/Users';import NewPlace from'./places/pages/NewPlace';import UserPlaces from'./places/pages/UserPlaces';import UpdatePlace from'./places/pages/UpdatePlace';import Auth from'./user/pages/Auth';import MainNavigation from'./shared/components/navigation/MainNavigation';import{AuthContext}from'./shared/context/auth-context';import{useAuth}from'./shared/hooks/auth-hook';var App=function App(){var _useAuth=useAuth(),token=_useAuth.token,login=_useAuth.login,logout=_useAuth.logout,userId=_useAuth.userId;var routes;if(token){routes=/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"/\",exact:true},/*#__PURE__*/React.createElement(Users,null)),/*#__PURE__*/React.createElement(Route,{path:\"/:userId/places\",exact:true},/*#__PURE__*/React.createElement(UserPlaces,null)),/*#__PURE__*/React.createElement(Route,{path:\"/places/new\",exact:true},/*#__PURE__*/React.createElement(NewPlace,null)),/*#__PURE__*/React.createElement(Route,{path:\"/places/:placeId\"},/*#__PURE__*/React.createElement(UpdatePlace,null)),/*#__PURE__*/React.createElement(Redirect,{to:\"/\"}));}else{routes=/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"/\",exact:true},/*#__PURE__*/React.createElement(Users,null)),/*#__PURE__*/React.createElement(Route,{path:\"/:userId/places\",exact:true},/*#__PURE__*/React.createElement(UserPlaces,null)),/*#__PURE__*/React.createElement(Route,{path:\"/auth\"},/*#__PURE__*/React.createElement(Auth,null)),/*#__PURE__*/React.createElement(Redirect,{to:\"/auth\"}));}return/*#__PURE__*/React.createElement(AuthContext.Provider,{value:{isLoggedIn:!!token,token:token,userId:userId,login:login,logout:logout}},/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(MainNavigation,null),/*#__PURE__*/React.createElement(\"main\",null,routes)));};export default App;","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Redirect","Switch","Users","NewPlace","UserPlaces","UpdatePlace","Auth","MainNavigation","AuthContext","useAuth","App","token","login","logout","userId","routes","isLoggedIn"],"sources":["/Users/reginaluskin/Desktop/Graduation-Project/GraduationProject/src/App.js"],"sourcesContent":["import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\nimport Users from './user/pages/Users';\nimport NewPlace from './places/pages/NewPlace';\nimport UserPlaces from './places/pages/UserPlaces';\nimport UpdatePlace from './places/pages/UpdatePlace';\nimport Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst App = () => {\n  const { token, login, logout, userId} = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OACEC,aAAa,GAAIC,OAAM,CACvBC,KAAK,CACLC,QAAQ,CACRC,MAAM,KACD,kBAAkB,CAEzB,MAAOC,MAAK,KAAM,oBAAoB,CACtC,MAAOC,SAAQ,KAAM,yBAAyB,CAC9C,MAAOC,WAAU,KAAM,2BAA2B,CAClD,MAAOC,YAAW,KAAM,4BAA4B,CACpD,MAAOC,KAAI,KAAM,mBAAmB,CACpC,MAAOC,eAAc,KAAM,+CAA+C,CAC1E,OAASC,WAAW,KAAQ,+BAA+B,CAC3D,OAASC,OAAO,KAAQ,0BAA0B,CAElD,GAAMC,IAAG,CAAG,QAANA,IAAG,EAAS,CAChB,aAAwCD,OAAO,EAAE,CAAzCE,KAAK,UAALA,KAAK,CAAEC,KAAK,UAALA,KAAK,CAAEC,MAAM,UAANA,MAAM,CAAEC,MAAM,UAANA,MAAM,CAEpC,GAAIC,OAAM,CAEV,GAAIJ,KAAK,CAAE,CACTI,MAAM,cACJ,oBAAC,MAAM,mBACL,oBAAC,KAAK,EAAC,IAAI,CAAC,GAAG,CAAC,KAAK,oBACnB,oBAAC,KAAK,MAAG,CACH,cACR,oBAAC,KAAK,EAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,oBACjC,oBAAC,UAAU,MAAG,CACR,cACR,oBAAC,KAAK,EAAC,IAAI,CAAC,aAAa,CAAC,KAAK,oBAC7B,oBAAC,QAAQ,MAAG,CACN,cACR,oBAAC,KAAK,EAAC,IAAI,CAAC,kBAAkB,eAC5B,oBAAC,WAAW,MAAG,CACT,cACR,oBAAC,QAAQ,EAAC,EAAE,CAAC,GAAG,EAAG,CAEtB,CACH,CAAC,IAAM,CACLA,MAAM,cACJ,oBAAC,MAAM,mBACL,oBAAC,KAAK,EAAC,IAAI,CAAC,GAAG,CAAC,KAAK,oBACnB,oBAAC,KAAK,MAAG,CACH,cACR,oBAAC,KAAK,EAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,oBACjC,oBAAC,UAAU,MAAG,CACR,cACR,oBAAC,KAAK,EAAC,IAAI,CAAC,OAAO,eACjB,oBAAC,IAAI,MAAG,CACF,cACR,oBAAC,QAAQ,EAAC,EAAE,CAAC,OAAO,EAAG,CAE1B,CACH,CAEA,mBACE,oBAAC,WAAW,CAAC,QAAQ,EACnB,KAAK,CAAE,CACLC,UAAU,CAAE,CAAC,CAACL,KAAK,CACnBA,KAAK,CAAEA,KAAK,CACZG,MAAM,CAAEA,MAAM,CACdF,KAAK,CAAEA,KAAK,CACZC,MAAM,CAAEA,MACV,CAAE,eAEF,oBAAC,MAAM,mBACL,oBAAC,cAAc,MAAG,cAClB,gCAAOE,MAAM,CAAQ,CACd,CACY,CAE3B,CAAC,CAED,cAAeL,IAAG"},"metadata":{},"sourceType":"module"}