{"ast":null,"code":"var _jsxFileName = \"/Users/reginaluskin/Desktop/Graduation-Project/GraduationProject/src/places/pages/UserPlaces.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PlaceList from \"../components/PlaceList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const userId = useParams().userId;\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:4000/api/places/user/${userId}`);\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n  return /*#__PURE__*/React.createElement(PlaceList, {\n    items: loadedPlaces,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  });\n};\nexport default UserPlaces;","map":{"version":3,"names":["React","useEffect","useState","useParams","PlaceList","ErrorModal","useHttpClient","UserPlaces","loadedPlaces","setLoadedPlaces","isLoading","error","sendRequest","clearError","userId","fetchPlaces","responseData","places","err"],"sources":["/Users/reginaluskin/Desktop/Graduation-Project/GraduationProject/src/places/pages/UserPlaces.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport PlaceList from \"../components/PlaceList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try{\n        const responseData = await sendRequest(\n          `http://localhost:4000/api/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      }catch(err){}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n\n  return <PlaceList items={loadedPlaces} />;\n};\n\nexport default UserPlaces;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,+CAA+C;AACtE,SAASC,aAAa,QAAQ,8BAA8B;AAG5D,MAAMC,UAAU,GAAG,MAAM;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,EAAE;EAClD,MAAM;IAACQ,SAAS;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAU,CAAC,GAAGP,aAAa,EAAE;EAEnE,MAAMQ,MAAM,GAAGX,SAAS,EAAE,CAACW,MAAM;EAEjCb,SAAS,CAAC,MAAM;IACd,MAAMc,WAAW,GAAG,YAAY;MAC9B,IAAG;QACD,MAAMC,YAAY,GAAG,MAAMJ,WAAW,CACnC,yCAAwCE,MAAO,EAAC,CAClD;QACDL,eAAe,CAACO,YAAY,CAACC,MAAM,CAAC;MACtC,CAAC,QAAMC,GAAG,EAAC,CAAC;IACd,CAAC;IACDH,WAAW,EAAE;EACf,CAAC,EAAE,CAACH,WAAW,EAAEE,MAAM,CAAC,CAAC;EAGzB,oBAAO,oBAAC,SAAS;IAAC,KAAK,EAAEN,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG;AAC3C,CAAC;AAED,eAAeD,UAAU"},"metadata":{},"sourceType":"module"}