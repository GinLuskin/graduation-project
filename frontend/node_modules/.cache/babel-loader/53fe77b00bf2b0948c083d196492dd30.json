{"ast":null,"code":"var _jsxFileName = \"/Users/reginaluskin/Desktop/Graduation-Project/GraduationProject/src/places/pages/UpdatePlace.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const history = useHistory();\n  const [formState, inputHandler, setFormData] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:4000/api/places/${placeId}`);\n        setLoadedPlace(responseData.place);\n        setFormData({\n          title: {\n            value: responseData.place.title,\n            isValid: true\n          },\n          description: {\n            value: responseData.place.description,\n            isValid: true\n          }\n        }, true);\n      } catch (err) {}\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(`http://localhost:4000/api/places/${placeId}`, 'PATCH', JSON.stringify({\n        title: formState.inputs.title.value,\n        description: formState.inputs.description.value\n      }), {\n        'Content-Type': 'application/json'\n      });\n      history.push('/' + auth.userId + '/places');\n    } catch (err) {}\n  };\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }));\n  }\n  if (!loadedPlace && !error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"Could not find place!\")));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), !isLoading && loadedPlace && /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeUpdateSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    initialValue: loadedPlace.title,\n    initialValid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (min. 5 characters).\",\n    onInput: inputHandler,\n    initialValue: loadedPlace.description,\n    initialValid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"UPDATE PLACE\")));\n};\nexport default UpdatePlace;","map":{"version":3,"names":["React","useEffect","useState","useContext","useParams","useHistory","Input","Button","Card","LoadingSpinner","ErrorModal","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","useHttpClient","AuthContext","UpdatePlace","auth","isLoading","error","sendRequest","clearError","loadedPlace","setLoadedPlace","placeId","history","formState","inputHandler","setFormData","title","value","isValid","description","fetchPlace","responseData","place","err","placeUpdateSubmitHandler","event","preventDefault","JSON","stringify","inputs","push","userId"],"sources":["/Users/reginaluskin/Desktop/Graduation-Project/GraduationProject/src/places/pages/UpdatePlace.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `http://localhost:4000/api/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true\n            }\n          },\n          true\n        );\n\n      } catch (err) {}\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `http://localhost:4000/api/places/${placeId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value\n        }),\n        {\n          'Content-Type': 'application/json'\n        }\n      );\n      history.push('/' + auth.userId + '/places');\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;"],"mappings":"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"},"metadata":{},"sourceType":"module"}