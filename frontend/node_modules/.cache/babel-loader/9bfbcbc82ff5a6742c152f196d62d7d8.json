{"ast":null,"code":"var _jsxFileName = \"/Users/reginaluskin/Desktop/myApp/src/places/pages/NewPlace.js\";\nimport React, { useCallback, useReducer } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport \"./NewPlace.css\";\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {};\n    default:\n      return state;\n  }\n};\nconst NewPlace = () => {\n  useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  const titleInputHandler = useCallback((id, value, isValid) => {}, []);\n  const descriptionInputHandler = useCallback((id, value, isValid) => {}, []);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: titleInputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters).\",\n    onInput: descriptionInputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n};\nexport default NewPlace;","map":{"version":3,"names":["React","useCallback","useReducer","Input","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","NewPlace","title","value","description","titleInputHandler","id","descriptionInputHandler"],"sources":["/Users/reginaluskin/Desktop/myApp/src/places/pages/NewPlace.js"],"sourcesContent":["import React, { useCallback, useReducer } from \"react\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport \"./NewPlace.css\";\n\nconst formReducer = (state, action) => {\n    switch(action.type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true;\n            for(const inputId in state.inputs) {\n              if (inputId === action.inputId){\n                formIsValid = formIsValid && action.isValid;\n              } else {\n                formIsValid = formIsValid && state.inputs[inputId].isValid;\n              }\n            }\n            return {};\n        default:\n            return state\n    }\n};\n\nconst NewPlace = () => {\n    useReducer(formReducer, {\n        inputs: {\n            title: {\n                value: '',\n                isValid: false\n            },\n            description: {\n                value: '',\n                isValid: false\n            }\n        },\n        isValid: false\n    });\n\n    const titleInputHandler = useCallback((id, value, isValid) => {}, []);\n    const descriptionInputHandler = useCallback((id, value, isValid) => {}, []);\n\n    return (\n    <form className=\"place-form\">\n      <Input\n        id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        onInput={titleInputHandler}\n      />\n      <Input\n        id='description'\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description (at least 5 characters).\"\n        onInput={descriptionInputHandler}\n      />\n    </form>\n  );\n};\n\nexport default NewPlace;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,UAAU,QAAQ,OAAO;AAEtD,OAAOC,KAAK,MAAM,4CAA4C;AAC9D,SAASC,mBAAmB,EAAEC,iBAAiB,QAAQ,8BAA8B;AACrF,OAAO,gBAAgB;AAEvB,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACnC,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,cAAc;MACf,IAAIC,WAAW,GAAG,IAAI;MACtB,KAAI,MAAMC,OAAO,IAAIJ,KAAK,CAACK,MAAM,EAAE;QACjC,IAAID,OAAO,KAAKH,MAAM,CAACG,OAAO,EAAC;UAC7BD,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAAO;QAC7C,CAAC,MAAM;UACLH,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAM,CAACD,OAAO,CAAC,CAACE,OAAO;QAC5D;MACF;MACA,OAAO,CAAC,CAAC;IACb;MACI,OAAON,KAAK;EAAA;AAExB,CAAC;AAED,MAAMO,QAAQ,GAAG,MAAM;EACnBZ,UAAU,CAACI,WAAW,EAAE;IACpBM,MAAM,EAAE;MACJG,KAAK,EAAE;QACHC,KAAK,EAAE,EAAE;QACTH,OAAO,EAAE;MACb,CAAC;MACDI,WAAW,EAAE;QACTD,KAAK,EAAE,EAAE;QACTH,OAAO,EAAE;MACb;IACJ,CAAC;IACDA,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,MAAMK,iBAAiB,GAAGjB,WAAW,CAAC,CAACkB,EAAE,EAAEH,KAAK,EAAEH,OAAO,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EACrE,MAAMO,uBAAuB,GAAGnB,WAAW,CAAC,CAACkB,EAAE,EAAEH,KAAK,EAAEH,OAAO,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EAE3E,oBACA;IAAM,SAAS,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC1B,oBAAC,KAAK;IACJ,EAAE,EAAC,OAAO;IACV,OAAO,EAAC,OAAO;IACf,IAAI,EAAC,MAAM;IACX,KAAK,EAAC,OAAO;IACb,UAAU,EAAE,CAACR,iBAAiB,EAAE,CAAE;IAClC,SAAS,EAAC,6BAA6B;IACvC,OAAO,EAAEa,iBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC3B,eACF,oBAAC,KAAK;IACJ,EAAE,EAAC,aAAa;IAChB,OAAO,EAAC,UAAU;IAClB,KAAK,EAAC,aAAa;IACnB,UAAU,EAAE,CAACd,mBAAmB,CAAC,CAAC,CAAC,CAAE;IACrC,SAAS,EAAC,2DAA2D;IACrE,OAAO,EAAEgB,uBAAwB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACjC,CACG;AAEX,CAAC;AAED,eAAeN,QAAQ"},"metadata":{},"sourceType":"module"}