{"ast":null,"code":"var _jsxFileName = \"/Users/reginaluskin/Desktop/Graduation-Project/GraduationProject/src/places/pages/NewPlace.js\";\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: '',\n      isValid: false\n    },\n    image: {\n      value: null,\n      isValid: false\n    }\n  });\n  const history = useHistory();\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      formData.append('creator', auth.userId);\n      formData.append('image', formState.inputs.image.value);\n      await sendRequest('http://localhost:4000/api/places', 'POST', formData, {\n        Authorization: 'Bearer ' + auth.token\n      });\n      history.push('/');\n    } catch (err) {}\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters).\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"address\",\n    element: \"input\",\n    label: \"Address\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid address.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ImageUpload, {\n    id: \"image\",\n    onInput: inputHandler,\n    errorText: \"Please provide an image.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"ADD PLACE\")));\n};\nexport default NewPlace;","map":{"version":3,"names":["React","useContext","useHistory","Input","Button","ErrorModal","ImageUpload","LoadingSpinner","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","useHttpClient","AuthContext","NewPlace","auth","isLoading","error","sendRequest","clearError","formState","inputHandler","title","value","isValid","description","address","image","history","placeSubmitHandler","event","preventDefault","formData","FormData","append","inputs","userId","Authorization","token","push","err"],"sources":["/Users/reginaluskin/Desktop/Graduation-Project/GraduationProject/src/places/pages/NewPlace.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook'\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\n\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext)\n  const { isLoading, error, sendRequest, clearError} = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid: false\n      }\n  });\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    try{\n      const formData = new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      formData.append('creator', auth.userId);\n      formData.append('image', formState.inputs.image.value); \n      \n      await sendRequest('http://localhost:4000/api/places', 'POST', formData, {\n        Authorization: 'Bearer ' + auth.token\n      });\n      history.push('/');\n    }catch(err){}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay/>}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload \n          id=\"image\" \n          onInput={inputHandler} \n          errorText=\"Please provide an image.\" \n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;"],"mappings":"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"},"metadata":{},"sourceType":"module"}